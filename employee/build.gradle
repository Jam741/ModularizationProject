apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion

    defaultConfig {
        applicationId "com.yingwumeijia.android.worker"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode rootProject.versionCode
        versionName rootProject.versionName
        multiDexEnabled true

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        ndk {

            abiFilters "armeabi", "armeabi-v7a", "x86", "mips"

        }
    }

    signingConfigs {

        config {
            try {
                keyAlias KEY_ALIAS_WORKER
                keyPassword KEY_PASSWORD
                storePassword KEY_PASSWORD
                storeFile file(STORE_FILE_APTH_WORKER)
                v1SigningEnabled true
                v2SigningEnabled true
            } catch (ex) {
                throw new InvalidUserDataException(ex.toString())
            }
        }
    }

    buildTypes {
        release {
            buildConfigField("boolean", "LOG_DEBUG", "false")
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config

            minifyEnabled false
            //是否清理无用资源
//            shrinkResources false
            //是否启用zipAlign压缩
//            zipAlignEnabled true
            //是否支持本地化调整
            pseudoLocalesEnabled true
        }
        debug {
            buildConfigField("boolean", "LOG_DEBUG", "true")
            signingConfig signingConfigs.config

            minifyEnabled false
            //是否清理无用资源
//            shrinkResources false
//            zipAlignEnabled true
            pseudoLocalesEnabled true
        }
    }


    sourceSets {
        main {
            java.srcDirs = ['src/main/java']
            resources.srcDirs = ['src/main/java']
            renderscript.srcDirs = ['src/main/java']
            res.srcDirs = ['src/main/res']
            assets.srcDirs = ['src/main/assets']
            jni.srcDirs = []
            jniLibs.srcDirs = ['src/libs']
        }
    }


    productFlavors {
        ywmjtest {}
        ywmj {}
        xiaomi {}
        ali {}
        toutiao {}
        baidu {}
        yingyongbao {}
        meizu {}
        huawei {}
        qihu360 {}


        productFlavors.all { flavor ->
            flavor.manifestPlaceholders = [UMENG_CHANNEL_VALUE: name]
        }


    }

    lintOptions{
        checkReleaseBuilds false
        abortOnError false
    }
}


configurations.all {

    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == 'com.android.support') {
            if (!requested.name.startsWith("multidex")) {
                details.useVersion rootProject.ext.appcompat
            }
        }
    }
}



dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile project(':baseywmj')
    testCompile 'junit:junit:4.12'
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    compile(name: 'HMS-SDK-2.4.0.300', ext: 'aar')
    compile 'com.aliyun.ams:alicloud-android-hotfix:3.0.8'
}
repositories {
    mavenCentral()
    flatDir { dirs 'aars' }
    maven {
        url "http://maven.aliyun.com/nexus/content/repositories/releases"
    }
}
